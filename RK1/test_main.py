import unittest
from main import first_task, second_task, third_task

class TestTasks(unittest.TestCase):

    def test_first_task(self):
        """
        Тест для функции first_task.
        Проверяет, что список отсортирован по первому элементу.
        """
        # Тестовые данные
        one_to_many = [
            ("Чайковский", "Военный оркестр", "Чайковский"),
            ("Бетховен", "Симфонический оркестр", "Бетховен"),
            ("Прокофьев", "Джазовый оркестр", "Прокофьев"),
        ]
        # Ожидаемый результат (сортировка по первому элементу)
        expected = [
            ("Бетховен", "Симфонический оркестр", "Бетховен"),
            ("Прокофьев", "Джазовый оркестр", "Прокофьев"),
            ("Чайковский", "Военный оркестр", "Чайковский"),
        ]
        # Проверка
        self.assertEqual(first_task(one_to_many), expected)

    def test_second_task(self):
        """
        Тест для функции second_task.
        Проверяет, что подсчитывается количество оркестров каждого типа и сортируется по убыванию.
        """
        # Тестовые данные
        one_to_many = [
            ("Симфонический оркестр", "Симфонический оркестр", "Бетховен"),
            ("Военный оркестр", "Военный оркестр", "Чайковский"),
            ("Джазовый оркестр", "Джазовый оркестр", "Прокофьев"),
            ("Оркестр народных инструментов", "Оркестр народных инструментов", "Прокофьев"),
            ("Духовой оркестр", "Духовой оркестр", "Бетховен"),
            ("Симфонический оркестр", "Симфонический оркестр", "Чайковский"),
        ]
        # Ожидаемый результат (подсчет по типам оркестров)
        expected = [
            ("Симфонический оркестр", 2),
            ("Военный оркестр", 1),
            ("Джазовый оркестр", 1),
            ("Оркестр народных инструментов", 1),
            ("Духовой оркестр", 1),
        ]
        # Проверка
        self.assertEqual(second_task(one_to_many), expected)

    def test_third_task(self):
        """
        Тест для функции third_task.
        Проверяет, что фильтруются оркестры, имена которых заканчиваются на заданную букву.
        """
        # Тестовые данные
        many_to_many = [
            ("Симфонический оркестр", "Симфонический оркестр", "Бетховен"),
            ("Военный оркестр", "Военный оркестр", "Чайковский"),
            ("Джазовый оркестр", "Джазовый оркестр", "Прокофьев"),
            ("Оркестр народных инструментов", "Оркестр народных инструментов", "Прокофьев"),
            ("Духовой оркестр", "Духовой оркестр", "Бетховен"),
            ("Симфонический оркестр", "Симфонический оркестр", "Чайковский"),
        ]
        # Ожидаемый результат (фильтрация по последней букве 'а')
        expected = []
        # Проверка
        self.assertEqual(third_task(many_to_many, 'а'), expected)

if __name__ == '__main__':
    unittest.main()